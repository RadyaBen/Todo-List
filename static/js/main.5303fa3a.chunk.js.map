{"version":3,"sources":["components/AppHeader/AppHeader.js","components/SearchPanel/SearchPanel.js","components/PostStatusFilter/PostStatusFilter.js","components/PostListItem/PostListItem.js","components/PostList/PostList.js","components/PostAddForm/PostAddForm.js","components/App/App.js","index.js"],"names":["Header","styled","div","props","colored","AppHeader","liked","allPosts","as","SearchPanel","onUpdateSearch","e","term","target","value","setState","state","className","type","placeholder","onChange","this","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","PostListItem","onDeleteItem","onToggleImportant","onToggleLiked","classNames","important","like","PostList","posts","elements","item","id","itemProps","PostAddForm","onValueChange","text","onSubmit","preventDefault","onAddItem","style","color","errorMessage","App","body","length","test","newItem","maxId","prevState","newArr","data","index","findIndex","elem","slice","old","searchPost","items","indexOf","filterPosts","visiblePosts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5303fa3a.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport './appHeader.css';\r\n\r\nconst Header = styled.div` \r\n\tdisplay: flex;\r\n\talign-items: flex-end;\r\n\tjustify-content: space-between;\r\n\th1 {\r\n\t\tfont-size: 26px;\r\n\t\tcolor: ${props => props.colored ? 'red' : 'green'}\r\n\t\thover { \r\n\t\t\tcolor: blue;\r\n\t\t}\r\n\t}\r\n\th2 {\r\n\t\tfont-size: 1.2rem;\r\n\t\tcolor: grey;\r\n\t}\r\n`;\r\n\r\nconst AppHeader = ({ liked, allPosts }) => {\r\n\treturn (\r\n\t\t<Header as='a'>\r\n\t\t\t<h1>To Do List</h1>\r\n\t\t\t<h2>{allPosts} entries, of which I liked {liked}</h2>\r\n\t\t</Header>\r\n\t);\r\n};\r\n\r\nexport { AppHeader };","import React, { Component } from 'react';\r\n\r\nimport './searchPanel.css';\r\n\r\nclass SearchPanel extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tterm: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonUpdateSearch = (e) => {\r\n\t\tconst term = e.target.value;\r\n\t\tthis.setState({ term });\r\n\t\tthis.props.onUpdateSearch(term);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"form-control search-input\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Search by notes\"\r\n\t\t\t\tonChange={this.onUpdateSearch}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport { SearchPanel }; ","import React, { Component } from 'react';\r\n\r\nclass PostStatusFilter extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.buttons = [\r\n\t\t\t{ name: 'all', label: 'All' },\r\n\t\t\t{ name: 'like', label: 'Liked' }\r\n\t\t]\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst buttons = this.buttons.map(({ name, label }) => {\r\n\t\t\tconst { filter, onFilterSelect } = this.props;\r\n\t\t\t// The button is formed wwhere the filter matches\r\n\t\t\tconst active = filter === name;\r\n\t\t\tconst clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n\t\t\treturn (\r\n\t\t\t\t<button\r\n\t\t\t\t\tkey={name}\r\n\t\t\t\t\ttype='button\"'\r\n\t\t\t\t\tclassName={`btn ${clazz}`}\r\n\t\t\t\t\tonClick={() => onFilterSelect(name)}>{label}</button>\r\n\t\t\t)\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className=\"btn-group\">\r\n\t\t\t\t{buttons}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport { PostStatusFilter }; ","import React, { Component } from 'react';\r\n\r\nimport './postListItem.css'\r\n\r\nclass PostListItem extends Component {\r\n\r\n\trender() {\r\n\t\tconst { label, onDeleteItem, onToggleImportant, onToggleLiked, important, like } = this.props;\r\n\t\tlet classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n\t\tif (important) {\r\n\t\t\tclassNames += ' important';\r\n\t\t}\r\n\r\n\t\tif (like) {\r\n\t\t\tclassNames += ' like';\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classNames}>\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName=\"app-list-item-label\"\r\n\t\t\t\t\tonClick={onToggleLiked}>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</span>\r\n\t\t\t\t<div className=\"d-flex justify-content-center align-items-center\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn-star btn-sm\"\r\n\t\t\t\t\t\tonClick={onToggleImportant}>\r\n\t\t\t\t\t\t<i className=\"fa fa-star\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn-trash btn-sm\"\r\n\t\t\t\t\t\tonClick={onDeleteItem}>\r\n\t\t\t\t\t\t<i className=\"fa fa-trash-o\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<i className=\"fa fa-heart\"></i>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport { PostListItem };","import React from 'react';\r\n\r\nimport { PostListItem } from '../PostListItem';\r\n\r\nimport './postList.css'\r\n\r\nconst PostList = ({ posts, onDeleteItem, onToggleImportant, onToggleLiked }) => {\r\n\r\n\tconst elements = posts.map((item) => {\r\n\t\tconst { id, ...itemProps } = item;\r\n\t\treturn (\r\n\t\t\t<li key={id} className='list-group-item'>\r\n\t\t\t\t<PostListItem\r\n\t\t\t\t\t{...itemProps}\r\n\t\t\t\t\tonDeleteItem={() => onDeleteItem(id)}\r\n\t\t\t\t\tonToggleImportant={() => onToggleImportant(id)}\r\n\t\t\t\t\tonToggleLiked={() => onToggleLiked(id)} />\r\n\t\t\t</li>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<ul className=\"app-list list-group\">\r\n\t\t\t{elements}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport { PostList };","import React, { Component } from 'react';\r\n\r\nimport './postAddForm.css'\r\n\r\nclass PostAddForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext: ''\r\n\t\t};\r\n\t}\r\n\r\n\tonValueChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\ttext: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t// Transfer the text to our posts\r\n\t\tthis.props.onAddItem(this.state.text);\r\n\t\tthis.setState({\r\n\t\t\ttext: ''\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form\r\n\t\t\t\tclassName=\"bottom-panel d-flex\"\r\n\t\t\t\tonSubmit={this.onSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"What do you want to do?\"\r\n\t\t\t\t\t\tclassName=\"form-control new-post-label\"\r\n\t\t\t\t\t\tonChange={this.onValueChange}\r\n\t\t\t\t\t\tvalue={this.state.text}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"text-error\" style={{ color: 'red' }}>{this.props.errorMessage}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"btn btn-outline-secondary custom\">\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport { PostAddForm };","import React, { Component } from 'react';\r\n\r\nimport { AppHeader } from '../AppHeader';\r\nimport { SearchPanel } from '../SearchPanel';\r\nimport { PostStatusFilter } from '../PostStatusFilter';\r\nimport { PostList } from '../PostList';\r\nimport { PostAddForm } from '../PostAddForm';\r\n\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdata: [\r\n\t\t\t\t{ label: 'Create a ToDoList on the React', important: false, like: false, id: 1 },\r\n\t\t\t\t{ label: 'Learn English with teacher', important: false, like: false, id: 2 },\r\n\t\t\t\t{ label: 'To prepare for an exam', important: false, like: false, id: 3 }\r\n\t\t\t],\r\n\t\t\tterm: '',\r\n\t\t\tfilter: 'all',\r\n\t\t\terrorMessage: ''\r\n\t\t};\r\n\t\tthis.maxId = 4;\r\n\t}\r\n\r\n\tonAddItem = (body) => {\r\n\t\tconst isListValid = (body.length < 10 || /^\\s*$/.test(body));\r\n\r\n\t\tif (isListValid) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorMessage: 'The field cannot be empty and have less than 10 characters'\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tconst newItem = {\r\n\t\t\t\tlabel: body,\r\n\t\t\t\timportant: false,\r\n\t\t\t\tid: this.maxId++\r\n\t\t\t}\r\n\t\t\tthis.setState((prevState) => {\r\n\t\t\t\tconst newArr = [...prevState.data, newItem];\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\tdata: newArr,\r\n\t\t\t\t\terrorMessage: ''\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tonDeleteItem = (id) => {\r\n\t\tthis.setState(({ data }) => {\r\n\t\t\tconst index = data.findIndex((elem) => elem.id === id);\r\n\r\n\t\t\tconst newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\t\t\treturn {\r\n\t\t\t\tdata: newArr\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tonToggleImportant = (id) => {\r\n\t\tthis.setState(({ data }) => {\r\n\t\t\tconst index = data.findIndex(elem => elem.id === id);\r\n\r\n\t\t\tconst old = data[index];\r\n\t\t\tconst newItem = { ...old, important: !old.important } // Ovewrite the old object with the new object\r\n\r\n\t\t\tconst newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]; // This's formed object, but already with a new changed some object\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata: newArr\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tonToggleLiked = (id) => {\r\n\t\tthis.setState(({ data }) => {\r\n\t\t\tconst index = data.findIndex(elem => elem.id === id);\r\n\r\n\t\t\tconst old = data[index];\r\n\t\t\tconst newItem = { ...old, like: !old.like } // Ovewrite the old object with the new object\r\n\r\n\t\t\tconst newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]; // This's formed object, but already with a new changed some object\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata: newArr\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsearchPost = (items, term) => {\r\n\t\tif (term.length === 0) {\r\n\t\t\treturn items\r\n\t\t}\r\n\r\n\t\t// This method will return posts that contain what the user has entered\r\n\t\treturn items.filter((item) => {\r\n\t\t\treturn item.label.indexOf(term) > -1;\r\n\t\t});\r\n\t}\r\n\r\n\tfilterPosts = (items, filter) => {\r\n\t\tif (filter === 'like') {\r\n\t\t\treturn items.filter(item => item.like)\r\n\t\t} else {\r\n\t\t\treturn items\r\n\t\t}\r\n\t}\r\n\r\n\tonUpdateSearch = (term) => {\r\n\t\tthis.setState({ term });\r\n\t}\r\n\r\n\tonFilterSelect = (filter) => {\r\n\t\tthis.setState({ filter });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { data, term, filter, errorMessage } = this.state;\r\n\r\n\t\tconst liked = data.filter(item => item.like).length;\r\n\t\tconst allPosts = data.length;\r\n\r\n\t\tconst visiblePosts = this.filterPosts(this.searchPost(data, term), filter);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<AppHeader\r\n\t\t\t\t\tliked={liked}\r\n\t\t\t\t\tallPosts={allPosts} />\r\n\t\t\t\t<div className=\"search-panel d-flex\">\r\n\t\t\t\t\t<SearchPanel\r\n\t\t\t\t\t\tonUpdateSearch={this.onUpdateSearch} />\r\n\t\t\t\t\t<PostStatusFilter\r\n\t\t\t\t\t\tfilter={filter}\r\n\t\t\t\t\t\tonFilterSelect={this.onFilterSelect} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<PostList\r\n\t\t\t\t\tposts={visiblePosts}\r\n\t\t\t\t\tonDeleteItem={this.onDeleteItem}\r\n\t\t\t\t\tonToggleImportant={this.onToggleImportant}\r\n\t\t\t\t\tonToggleLiked={this.onToggleLiked} />\r\n\t\t\t\t<PostAddForm\r\n\t\t\t\t\tonAddItem={this.onAddItem}\r\n\t\t\t\t\terrorMessage={errorMessage} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport { App };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './components/App/';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);"],"sourceRoot":""}